@page "/Categories/Delete/{id:int}"

@inject ApplicationDbContext context
@inject NavigationManager navigation
@attribute [Authorize(Roles = "Admin")]



@if (Model is null)
{
    <p class="text-center">
        <em>categoria n√£o encontrada</em>
    </p>
}
else
{
    <h1>@Model.Title (@Model.Id)</h1>
    <EditForm Model="@Model" OnValidSubmit="OnValidSubmitAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-3">
            <label class="form-label">Nome da Categoria</label>
            <InputText @bind-Value="Model.Title" class="form-control" readonly />
            <ValidationMessage For="() => Model.Title" />
        </div>
        <button type="submit" class="btn btn-danger">Excluir</button>
        <a href="/categories" class="btn btn-primary">Cancelar </a>
    </EditForm>
}

@code
{
    [Parameter]
    public int Id { get; set; }
    public Category? Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await context
        .Categories
        .AsNoTracking()
        .FirstOrDefaultAsync(x => x.Id == Id);
    }

    public async Task OnValidSubmitAsync()
    {
        context.Categories.Remove(Model);
        await context.SaveChangesAsync();
        navigation.NavigateTo("Categories");
    }
}